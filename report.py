# report.py
from pathlib import Path
import os, textwrap

import pandas as pd
from dotenv import load_dotenv
from twilio.rest import Client

from etl import build_clean_csv  # ‚Üê —Ç–≤—ñ–π –º–æ–¥—É–ª—å ETL

# ---------------------------------------------------------------------
EMOJI = {
    "yachmen": "üåæ", "kukuruza": "üåΩ", "soya": "ü´ò",
    "raps": "üåº", "podsolnechnik": "üåª", "pshenitsa-2-klass": "üåæ",
}

NBSP = "\u202F"  # narrow no-break space


# ---------------------------------------------------------------------
def generate_summary(csv_path: str,
                     outfile: str = "price_summary.txt") -> str:
    df = pd.read_csv(csv_path)

    stats = (df.groupby("crop")["price"]
             .agg(["mean", "min", "max"])
             .round(2)
             .reset_index())

    blocks = []
    for _, row in stats.iterrows():
        crop = row["crop"]
        emoji = EMOJI.get(crop, "üå±")
        avg = f"{row['mean']:.2f}{NBSP}$"
        rng = f"{row['min']:.2f}{NBSP}‚Äì{NBSP}{row['max']:.2f}{NBSP}$"

        blocks.append(
            f"{emoji} {crop}\n"
            f"   ‚ñ∏ —Å–µ—Ä–µ–¥–Ω—è: {avg}\n"
            f"   ‚ñ∏ —Ä–æ–∑–±—ñ–≥ : {rng}"
        )

    text = "\n\n".join(blocks)  # –ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫ –º—ñ–∂ –∫—É–ª—å—Ç—É—Ä–∞–º–∏
    Path(outfile).write_text(text, encoding="utf-8")
    print(f"‚úÖ –ó–≤—ñ—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ ‚Üí {outfile}")
    return outfile

# ---------------------------------------------------------------------


def send_sms(file_path: str) -> None:
    """–ù–∞–¥—Å–∏–ª–∞—î –≤–º—ñ—Å—Ç —Ñ–∞–π–ª–∞ SMS-–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º–∏ —á–µ—Ä–µ–∑ Twilio."""
    load_dotenv()  # —á–∏—Ç–∞—î–º–æ .env —É –∫–æ—Ä–µ–Ω—ñ –ø—Ä–æ—î–∫—Ç—É
    sid = os.getenv("TWILIO_SID")
    token = os.getenv("TWILIO_TOKEN")
    from_ = os.getenv("TWILIO_FROM")
    to = os.getenv("TWILIO_TO")

    if not all([sid, token, from_, to]):
        raise RuntimeError("‚ùå –ü–µ—Ä–µ–≤—ñ—Ä .env ‚Äî –Ω–µ –≤—Å—ñ –∑–º—ñ–Ω–Ω—ñ –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ")

    client = Client(sid, token)
    text = Path(file_path).read_text(encoding="utf-8")

    # Twilio –ø—Ä–∏–π–º–∞—î –¥–æ ~1600 —Å–∏–º–≤–æ–ª—ñ–≤; –¥—Ä–æ–±–∏–º–æ –Ω–∞ —à–º–∞—Ç–∫–∏ –ø–æ 1500.
    for chunk in textwrap.wrap(text, width=1500):
        msg = client.messages.create(body=chunk, from_=from_, to=to)
        print(f"üì® SMS –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ (SID={msg.sid})")


# ---------------------------------------------------------------------
if __name__ == "__main__":
    csv_file = build_clean_csv()  # 1Ô∏è‚É£ ETL
    summary_path = generate_summary(csv_file)  # 2Ô∏è‚É£ –∑–≤—ñ—Ç
    send_sms(summary_path)  # 3Ô∏è‚É£ SMS
